import telebot

from src.bin import weather
from src.configs.config import TELEGRAM_TOKEN, GUIDE
import recorder
from src.utils.funcs import from_string
from telebot import types


bot = telebot.TeleBot(TELEGRAM_TOKEN)


# Handle '/start' and '/main commands'
@bot.message_handler(commands=['start', 'main'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    help_btn = types.KeyboardButton("‚ùìÔ∏è–ö–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å?")
    owner_btn = types.KeyboardButton("üë®‚ÄçüíªÔ∏è–ì–¥–µ —Ç–≤–æ–π —Ö–æ–∑—è–∏–Ω, –∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª?")
    cat_real_look_btn = types.KeyboardButton("üñºÔ∏è–ö–∞–∫ —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏?")

    markup.add(
        help_btn,
        owner_btn,
        cat_real_look_btn
    )
    if message.text == '/start':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n'
                                          f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! '
                                          f'–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.',
                         reply_markup=markup)
    else:
        bot.reply_to(message, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)


# handle the /autoloc command
@bot.message_handler(commands=['autoloc'])
def send_weather_by_loc(message):
    markup = types.ReplyKeyboardMarkup(is_persistent=False,
                                       one_time_keyboard=True,
                                       resize_keyboard=True)
    location_btn = types.KeyboardButton(text="üìçÔ∏è–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–π",
                                        request_location=True)
    main_menu_btn = types.KeyboardButton('/main')
    markup.add(location_btn, main_menu_btn)
    bot.send_message(chat_id=message.chat.id,
                     text='–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
                     reply_markup=markup)


# handle the /manualloc command
@bot.message_handler(commands=['manualloc'])
def send_weather_manually(message):
    # TODO –ó–¥–µ—Å—å –Ω–∞–¥–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≥–æ—Ä–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ –ø–æ–≥–æ–¥–Ω—ã–π
    #  –∞–ø–∏ —Å–µ—Ä—á, –∏ –∏—Å–∫–∞—Ç—å –µ–≥–æ, –ø—Ä–µ–¥–ª–∞–≥–∞—è –≤–∞—Ä–∏–∞–Ω—Ç—ã. –ï—Å–ª–∏ –æ–Ω–∏ –µ–≥–æ –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç,
    #  —Ç–æ –≤–≤–æ–¥–∏—Ç –∑–∞–Ω–æ–≤–æ, –ª–∏–±–æ –≤—ã–±–∏—Ä–∞–µ—Ç. –∏ –∏–¥–µ–º –∫–∞–∫ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—à–µ
    #  –∑–¥–µ—Å—å —Ç–∞–∫–∂–µ, –º–µ–Ω—é, —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥. –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –ø–æ–≤–µ–¥–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é,
    #  –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ. –¢–∞–∫–∂–µ –∫–æ–º–∞–Ω–¥–∞ /main, /start
    bot.reply_to(message, 'manual weather set menu')
    pass


# Handle messages with content_type 'location'
@bot.message_handler(content_types=['location'])
def echo_message(message):
    loc_from_string = str(message.location.latitude) + ',' + str(message.location.longitude)
    location_data = weather.search_locations(loc_from_string)
    city_name = location_data[0]['name']
    region_name = location_data[0]['region']
    country_name = location_data[0]['country']
    bot.reply_to(message, f'–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {city_name}, {region_name}, {country_name}')
    # TODO —Ä–µ–≥–∏–æ–Ω –∏–Ω–æ–≥–¥–∞ –ø—É—Å—Ç–æ–π. –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ, —Ç–∞–º –ª–∏—à–Ω—è—è –∑–∞–ø—è—Ç–∞—è. –ù–∞–≤–µ—Ä–Ω–æ–µ, join.
    # TODO —Å–¥–µ–ª–∞—Ç—å –º–µ–Ω—é –ø–æ–≥–æ–¥—ã –ª–∏–±–æ current –ª–∏–±–æ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è, –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑. –õ–∏–±–æ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏
    bot.reply_to(message, weather.current_weather(loc_from_string))
    recorder.log_message(message)


# handle questions from the main menu
@bot.message_handler(func=lambda message: True, content_types=['text'])
def echo_text_message(message):
    pure_str = message.text
    if pure_str == "‚ùìÔ∏è–ö–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å?" or pure_str == '/help':
        bot.send_message(message.chat.id, GUIDE)
    if pure_str == "üë®‚ÄçüíªÔ∏è–ì–¥–µ —Ç–≤–æ–π —Ö–æ–∑—è–∏–Ω, –∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª?" or pure_str == '/authors':
        bot.send_message(message.chat.id, 'Github –º–æ–µ–≥–æ —Ö–æ–∑—è–∏–Ω–∞:\nhttps://github.com/citysexx')
    if pure_str == "üñºÔ∏è–ö–∞–∫ —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏?" or pure_str == '/real':
        bot.send_photo(message.chat.id,
                       'https://photos.app.goo.gl/4Nx8uEyyqFjf6NCv6',
                       caption='–í–æ—Ç —Ç–∞–∫ —è –≤—ã–≥–ª—è–∂—É, –∫–æ–≥–¥–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é')


if __name__ == '__main__':
    bot.infinity_polling()
